/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.colorpicker;

import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.jetbrains.annotations.NotNull;

import com.github.dhaval2404.colorpicker.MaterialColorPickerDialog;
import com.github.dhaval2404.colorpicker.listener.ColorListener;
import com.github.dhaval2404.colorpicker.model.ColorShape;
import com.github.dhaval2404.colorpicker.model.ColorSwatch;

@Kroll.module(name="TiColorpicker", id="ti.colorpicker")
public class TiColorpickerModule extends KrollModule
{
	// Methods

	@Kroll.method
	public void showColorPicker(KrollDict args)
	{
		String selectionColor = args.optString("selectionColor", "#000000");
		KrollFunction onSelect = (KrollFunction)args.get("onSelect");

		new MaterialColorPickerDialog
			.Builder(TiApplication.getAppCurrentActivity())
			// .setTitle("Pick Theme")
			.setColorShape(ColorShape.SQAURE)
			.setColorSwatch(ColorSwatch._300)
			.setDefaultColor(selectionColor)
			.setColorListener((color, colorHex) -> {
				KrollDict event = new KrollDict();
				event.put("color", colorHex);

				onSelect.callAsync(krollObject, event);
			})
			.show();
	}
}
